Day 2 â€“ Strings: Reversal, Palindromes, Anagrams

ðŸ”° Understanding Strings in DSA
A string is a sequence of characters. In C#, it is an immutable object, meaning once created, its content cannot be changed. Operations like reversal, character comparison, or rearrangement result in new string instances.

ðŸ§  How to Approach String Problems
Before writing code, follow these steps:

âœ… Step 1: Read the Problem Carefully
What is the input?
What is the expected output?
Are there any constraints (e.g., only lowercase letters, no special characters)?
Is it case-sensitive?

âœ… Step 2: Classify the Problem
Reversal: Output in reverse order.
Palindrome: Check if reading left-to-right is the same as right-to-left.
Anagram: Are two strings made from the same letters?

âœ… Step 3: Use Examples
Always work through 1â€“2 examples by hand before writing code. This helps catch edge cases.

âœ… Step 4: Plan Your Logic
Do you need a stack, a dictionary, two-pointer approach, or just a simple loop?
Can you solve it with a built-in function, or do you need to build the logic yourself?

âœ… Step 5: Analyze Time & Space
Ask:
Can I solve it in O(n) or O(n log n)?
Am I using extra space (like a dictionary, array)?


### ðŸ”¤ **Advanced String Problems with S.No**

1. Reverse a String
2. Check whether a String is Palindrome or not
3. Find Duplicate characters in a string
4. Why strings are immutable in Java?
5. Write a Code to check whether one string is a rotation of another
6. Write a Program to check whether a string is a valid shuffle of two strings or not
7. Count and Say problem
8. Write a program to find the longest Palindrome in a string (Longest Palindromic Substring)
9. Find Longest Recurring Subsequence in String
10. Print all Subsequences of a string
11. Print all the permutations of the given string
12. Split the Binary string into two substrings with equal 0â€™s and 1â€™s
13. Word Wrap Problem \[VERY IMP]
14. Edit Distance \[Very Imp]
15. Find next greater number with same set of digits \[Very Very IMP]
16. Balanced Parenthesis problem \[Imp]
17. Word Break Problem \[Very Imp]
18. Rabin Karp Algorithm
19. KMP Algorithm
20. Convert a Sentence into its equivalent mobile numeric keypad sequence
21. Minimum number of bracket reversals needed to make an expression balanced
22. Count All Palindromic Subsequences in a given String
23. Count of number of given string in 2D character array
24. Search a Word in a 2D Grid of characters
25. Boyer Moore Algorithm for Pattern Searching
26. Converting Roman Numerals to Decimal
27. Longest Common Prefix
28. Number of flips to make binary string alternate
29. Find the first repeated word in string
30. Minimum number of swaps for bracket balancing
31. Find the longest common subsequence between two strings
32. Program to generate all possible valid IP addresses from given string
33. Write a program to find the smallest window that contains all characters of string itself
34. Rearrange characters in a string such that no two adjacent are same
35. Minimum characters to be added at front to make string palindrome
36. Given a sequence of words, print all anagrams together
37. Find the smallest window in a string containing all characters of another string
38. Recursively remove all adjacent duplicates
39. String matching where one string contains wildcard characters
40. Function to find Number of customers who could not get a computer
41. Transform One String to Another using Minimum Number of Given Operation
42. Check if two given strings are isomorphic to each other
43. Recursively print all sentences that can be formed from list of word lists
